DROP TABLE doit_db.TASK_TASK_LIST_ASSIGNMENT;
DROP TABLE doit_db.TASK;
DROP TABLE doit_db.TAG;
DROP TABLE doit_db.TASK_LIST;
DROP TABLE doit_db.USER;
DROP SCHEMA doit_db;
DROP USER doit_db;

CREATE USER 'doit_db'@'%' IDENTIFIED WITH mysql_native_password;
GRANT USAGE ON *.* TO 'doit_db'@'%' REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;
SET PASSWORD FOR 'doit_db'@'%' = PASSWORD('app');
CREATE DATABASE IF NOT EXISTS `doit_db`;
GRANT ALL PRIVILEGES ON doit_db.* TO 'doit_db'@'%';
FLUSH PRIVILEGES;

CREATE TABLE doit_db.USER
(
    USERNAME VARCHAR(15),
    EMAIL    VARCHAR(45),
    PASSWORD VARCHAR(45),
    DELETED BOOL DEFAULT false,
    CONSTRAINT PK_USER PRIMARY KEY (EMAIL)
);


CREATE TABLE doit_db.TASK_LIST
(
    ID      INT AUTO_INCREMENT,
    NAME    VARCHAR(15),
    USER_ID VARCHAR(45),
    CONSTRAINT PK_TASK_LIST PRIMARY KEY (ID),
    CONSTRAINT FK_TASK_LIST_USER FOREIGN KEY (USER_ID)
        REFERENCES USER (EMAIL)
);



CREATE TABLE doit_db.TAG
(
    ID           INT AUTO_INCREMENT,
    NAME         VARCHAR(15),
    TASK_LIST_ID INT,
    CONSTRAINT PK_TAG PRIMARY KEY (ID),
    CONSTRAINT FK_TAG_TASK_LIST FOREIGN KEY (TASK_LIST_ID)
        REFERENCES TASK_LIST (ID)
);

CREATE TABLE doit_db.TASK
(
    ID           INT AUTO_INCREMENT,
    DUE_DATE     DATETIME,
    NAME         VARCHAR(15),
    DESCRIPTION  VARCHAR(200),
    IS_DONE      BOOLEAN,
    TASK_LIST_ID INT,
    CONSTRAINT PK_TASK PRIMARY KEY (ID),
    CONSTRAINT FK_TASK_TASK_LIST FOREIGN KEY (ID)
        REFERENCES TASK_LIST (ID)
);

CREATE TABLE doit_db.TASK_TASK_LIST_ASSIGNMENT
(
    TASK_LIST_ID INT,
    TASK_ID      INT,
    CONSTRAINT PK_TASK_TASK_LIST_ASSIGNMENT
        PRIMARY KEY (TASK_ID, TASK_LIST_ID),
    CONSTRAINT FK_TASK_TASK_LIST_ASSIGNMENT_TASK_LIST
        FOREIGN KEY (TASK_LIST_ID)
            REFERENCES TASK_LIST (ID),
    CONSTRAINT FK_TASK_TASK_LIST_ASSIGNMENT_TASK
        FOREIGN KEY (TASK_ID)
            REFERENCES TASK (ID)
);

